plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group = 'com.jsyn'
version = '17.2.0'
sourceCompatibility = '1.8'
mainClassName = 'com.jsyn.apps.AboutJSyn'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'

    implementation fileTree(dir: 'libs', include: '*.jar')
}

sourceSets {
    jsynExamples {
        java {
            srcDirs = [
                'examples/src/main/java',
                'src/main/java'
            ]
            exclude 'com/jsyn/devices/jportaudio/**'
        }
        resources {
            srcDirs = ['examples/src/main/resources']
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

// Create a new task of type Jar
task jsynExamplesJar(type: Jar) {
    // Set the base name of the JAR file
    archiveBaseName.set('jsyn-examples-v2')

    // Set the version of the JAR file
    archiveVersion.set(project.version)

    // Use the output of your custom source set as the source for this JAR
    from sourceSets.jsynExamples.output

}

jar {
    manifest {
        attributes('Main-Class': mainClassName)
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

javadoc {
    exclude 'com/portaudio/**'
    exclude 'com/jsyn/devices/jportaudio/**'
    source = sourceSets.main.allJava

    options {
        addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jsyn'
            from components.java
            pom {
                name = 'JSyn'
                description = 'Java synthesizer library with unit generators.'
                url = 'https://www.softsynth.com/jsyn'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'philburk'
                        name = 'Phil Burk'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/philburk/jsyn.git'
                    developerConnection = 'scm:git:git@github.com:philburk/jsyn.git'
                    url = 'https://github.com/philburk/jsyn'
                }
            }
        }
    }
}
